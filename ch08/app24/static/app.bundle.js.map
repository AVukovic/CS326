{"version":3,"sources":["webpack:///./src/App.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueAdd.jsx","webpack:///./src/IssueFilter.jsx","webpack:///./src/IssueEdit.jsx"],"names":["contentNode","document","getElementById","NoMatch","RoutedApp","hashHistory","IssueList","IssueEdit","ReactDOM","render","IssueRow","props","issue","_id","substr","status","owner","created","toDateString","effort","completionDate","title","IssueTable","issueRows","issues","map","state","createIssue","bind","setFilter","loadData","prevProps","oldQuery","location","query","newQuery","fetch","search","then","response","ok","json","console","log","data","_metadata","total_count","records","forEach","Date","setState","alert","error","message","catch","err","newIssue","method","headers","body","JSON","stringify","res","updatedIssue","newIssues","concat","router","push","pathname","React","Component","propTypes","PropTypes","object","isRequired","IssueAdd","handleSubmit","e","preventDefault","form","forms","issueAdd","value","IssueFilter","clearFilter","setFilterOpen","setFilterAssigned","Separator","func","params","id"],"mappings":"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","file":"static/app.bundle.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, Redirect, hashHistory, withRouter } from 'react-router';\n\nimport IssueList from './IssueList.jsx';\nimport IssueEdit from './IssueEdit.jsx';\n\nvar contentNode = document.getElementById(\"contents\");\n\n// A simple component to indicate that a page was not found.\nconst NoMatch = () => <p>Page Not Found</p>;\n\n// The \"routed app\" that defines the different routes that\n// are supposed in this application. As you can see, If the\n// URL path is '/' we will render the IssueList component,\n// if the path is '/issues/:id' we render the IssueEdit component,\n// and if we get anything else we render the NoMatch view.\n// This router uses the \"hash history\" approach to implement\n// single-page apps with multiple views.\nconst RoutedApp = () => (\n  <Router history={hashHistory} >\n    <Redirect from=\"/\" to=\"/issues\" />\n    <Route path=\"/issues\" component={withRouter(IssueList)} />\n    <Route path=\"/issues/:id\" component={IssueEdit} />\n    <Route path=\"*\" component={NoMatch} />\n  </Router>);\n\n// This renders the JSX router inside the content node:\nReactDOM.render(<RoutedApp />, contentNode);\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react';\nimport 'isomorphic-fetch';\nimport { Link } from 'react-router';\n\nimport IssueAdd from './IssueAdd.jsx';\nimport IssueFilter from './IssueFilter.jsx';\n\nconst IssueRow = (props) => (\n  <tr>\n    <td><Link to={`/issues/${props.issue._id}`}>{props.issue._id.substr(-4)}</Link></td>\n    <td>{props.issue.status}</td>\n    <td>{props.issue.owner}</td>\n    <td>{props.issue.created.toDateString()}</td>\n    <td>{props.issue.effort}</td>\n    <td>\n      {props.issue.completionDate ? props.issue.completionDate.toDateString() : \"\"}\n    </td>\n    <td>{props.issue.title}</td>\n  </tr>\n);\n\nfunction IssueTable(props) {\n  const issueRows = props.issues.map(issue => (\n    <IssueRow key={issue._id} issue={issue} />\n  ));\n  return (\n    <table className=\"bordered-table\">\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Status</th>\n          <th>Owner</th>\n          <th>Created</th>\n          <th>Effort</th>\n          <th>Completion Date</th>\n          <th>Title</th>\n        </tr>\n      </thead>\n      <tbody>{issueRows}</tbody>\n    </table>\n  );\n}\n\nexport default class IssueList extends React.Component {\n  constructor() {\n    super();\n    this.state = { issues: [] };\n\n    this.createIssue = this.createIssue.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  // This method is part of the React component \"lifecycle\". It is invoked\n  // when a component property is updated. In this case, we are using it to\n  // load new data when the props.location object is changed. In particular,\n  // when we click on a link that causes react router to change the view to\n  // the IssueList and the URL changes (for example, a search query) it\n  // causes the componentDidUpdate() method to be invoked.\n  componentDidUpdate(prevProps) {\n    const oldQuery = prevProps.location.query;\n    const newQuery = this.props.location.query;\n    if (oldQuery.status === newQuery.status) {\n      return;\n    }\n    this.loadData();\n  }\n\n  loadData() {\n    // Note: React Router automatically adds a \"location\" property to a react\n    //       object's \"props\". The object that the \"location\" property refers\n    //       to also has a \"search\" property which is the query string of the\n    //       URL, including the '?' character  -  which is why we do not need\n    //       to add it to the string in the `fetch()` call.\n    fetch(`/api/issues${this.props.location.search}`).then(response => {\n      if (response.ok) {\n        response.json().then(data => {\n          console.log(\"Total count of records:\", data._metadata.total_count);\n          data.records.forEach(issue => {\n            issue.created = new Date(issue.created);\n            if (issue.completionDate)\n              issue.completionDate = new Date(issue.completionDate);\n          });\n          this.setState({ issues: data.records });\n        });\n      } else {\n        response.json().then(error => {\n          alert(\"Failed to fetch issues:\" + error.message)\n        });\n      }\n    }).catch(err => {\n      alert(\"Error in fetching data from server:\", err);\n    });\n  }\n\n  createIssue(newIssue) {\n    fetch('/api/issues', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newIssue),\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json()\n            .then(updatedIssue => {\n              updatedIssue.created = new Date(updatedIssue.created);\n              if (updatedIssue.completionDate)\n                updatedIssue.completionDate = new Date(updatedIssue.completionDate);\n              const newIssues = this.state.issues.concat(updatedIssue);\n              this.setState({ issues: newIssues });\n            });\n        }\n        else {\n          res.json()\n            .then(error => {\n              alert('Failed to add issue: ' + error.message);\n            });\n        }\n      });\n  }\n\n  setFilter(query) {\n    this.props.router.push({ pathname: this.props.location.pathname, query });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Issue Tracker</h1>\n        <IssueFilter setFilter={this.setFilter} />\n        <hr />\n        <IssueTable issues={this.state.issues} />\n        <hr />\n        <IssueAdd createIssue={this.createIssue} />\n      </div>\n    );\n  }\n}\n\nIssueList.propTypes = {\n  location: React.PropTypes.object.isRequired,\n  router: React.PropTypes.object,\n};\n\n\n// WEBPACK FOOTER //\n// ./src/IssueList.jsx","// NEW: added the import for react.\nimport React from 'react';\n\nexport default class IssueAdd extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let form = document.forms.issueAdd;\n    this.props.createIssue({\n      owner: form.owner.value,\n      title: form.title.value,\n      status: 'New',\n      created: new Date(),\n    });\n    // Clear the form for the next input.\n    form.owner.value = '';\n    form.title.value = '';\n  }\n\n  render() {\n    return (\n      <div>\n        <form name=\"issueAdd\" onSubmit={this.handleSubmit}>\n          <input type=\"text\" name=\"owner\" placeholder=\"Owner\" />\n          <input type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <button>Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/IssueAdd.jsx","import React from 'react';\nimport { Link } from 'react-router';\n\nexport default class IssueFilter extends React.Component {\n  constructor() {\n    super();\n    this.clearFilter = this.clearFilter.bind(this);\n    this.setFilterOpen = this.setFilterOpen.bind(this);\n    this.setFilterAssigned = this.setFilterAssigned.bind(this);\n  }\n\n  setFilterOpen(e) {\n    e.preventDefault();\n    this.props.setFilter({ status: 'Open' });\n  }\n\n  setFilterAssigned(e) {\n    e.preventDefault();\n    this.props.setFilter({ status: 'Assigned' });\n  }\n\n  clearFilter(e) {\n    e.preventDefault();\n    this.props.setFilter({});\n  }\n\n  render() {\n    const Separator = () => <span> | </span>;\n    return (\n      <div>\n        <a href=\"#\" onClick={this.clearFilter}>All Issues</a>\n        <Separator />\n        <a href=\"#\" onClick={this.setFilterOpen}>Open Issues</a>\n        <Separator />\n        <a href=\"#\" onClick={this.setFilterAssigned}>Assigned Issues</a>\n      </div>);\n  }\n}\n\nIssueFilter.propTypes = {\n  setFilter: React.PropTypes.func.isRequired,\n};\n\n\n// WEBPACK FOOTER //\n// ./src/IssueFilter.jsx","import React from 'react';\nimport { Link } from 'react-router';\n\nexport default class IssueEdit extends React.Component {\n  render() {\n    return (\n      <div>\n        <p>This is a placeholder for editing issue {this.props.params.id}.</p>\n        <Link to=\"/issues\">Back to issue list</Link>\n      </div>\n    );\n  }\n}\n\nIssueEdit.propTypes = {\n  params: React.PropTypes.object.isRequired,\n};\n\n\n// WEBPACK FOOTER //\n// ./src/IssueEdit.jsx"],"sourceRoot":""}